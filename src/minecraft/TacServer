#! /bin/bash

source "/home/a-ct/.minecraft/server.options"

ip="http://tacminecraf.zapto.org"

if [ -f ${pid_file} ]; then
  pid=$(cat ${pid_file})
else
  pid="none"
fi

s_start () {
  if is_running; then
    echo "$0 : Server is already running."
    exit 1
  fi

  echo "$0 : Starting server."
  nohup ${cmd} > ${log_file} 2>&1 & echo $! > ${pid_file}
}

s_stop () {
  if is_running; then
    kill -9 ${pid}
    echo "$0 : Stopping server."
    exit 0
  else
    echo "$0 : Server is not running."
  fi
}

s_restart () {
  if is_running; then
    kill -9 ${pid}
    echo "$0 : Stopping server."
  fi

  echo "$0 : Starting server."
  nohup ${cmd} > ${log_file} 2>&1 & echo $! > ${pid_file}
}

s_status () {
  date=$(date '+%Y-%m-%d %H:%M:%S')
  resp="\"time\": \"${date}\""
  ping=$(mcstatus "${ip}" ping 2> /dev/null) 
  if [ -z "${ping}" ]; then
    ## add the pending mekanism
    resp="${resp}, \"status\" : \"off\""
  else
    resp="${resp}, \"ping\" : \"${ping}\", "
    query=$(mcstatus "${ip}" query 2>/dev/null)
    resp="${resp}, $(echo "${query}" | sed 's/\([a-z]*\): \(.*\)/\"\1\" : \"\2\", /g')"
    resp=$(echo ${resp})
    resp="${resp}, \"status\" : \"on\""
  fi
  echo "{${resp}}"
}


is_running () {
  if [ ${pid} = "none" ]; then
    return 1
  fi

  pid_cmd=$(ps aux | awk '$2 == "'${pid}'" {for (i=11;i<=NF;i++) {if(i == 11){res = $i} else {res = res" "$i}} printf "%s",res}')

  if [ "${pid_cmd}" == "${cmd}" ]; then
    return 0
  fi

  return 1
}

if [ "$#" -ne 1 ]; then
  echo "Usage: $0 [start|stop|restart|status]" >&2
  exit 1
fi

case $1 in 
  start)
    s_start
    ;;
  stop)
    s_stop
    ;;
  restart)
    s_restart
    ;;
  status)
    s_status
    ;;
esac
